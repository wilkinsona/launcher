buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
		wrapperVersion = '1.0.10.BUILD-SNAPSHOT'
	}
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot.experimental:spring-boot-thin-gradle-plugin:${wrapperVersion}")
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.springframework.boot.experimental.thin-launcher'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

thinResolvePrepare {
	into new File("${buildDir}/thin/deploy")
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

configurations {
	compile.exclude module: 'spring-boot-starter-tomcat'
	thinLauncher
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-jetty')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	thinLauncher('org.springframework.boot.experimental:spring-boot-thin-wrapper:1.0.10.BUILD-SNAPSHOT')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.M8"
	}
}

task thinJar(type: Jar) {
	from zipTree(configurations.thinLauncher.singleFile)
	from(sourceSets.main.runtimeClasspath.filter { it.directory })
	manifest {
		attributes['Main-Class'] = 'org.springframework.boot.loader.wrapper.ThinJarWrapper'
		attributes['Start-Class'] = bootJar.mainClassName
	}
}
